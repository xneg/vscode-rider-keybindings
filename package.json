{
    "name": "rider-keybindnigs",
    "displayName": "Rider Keybindnigs",
    "description": "Port of Rider Keybindings",
    "version": "0.0.1",
    "engines": {
        "vscode": "^1.42.0"
    },
    "categories": [
        "Keymaps"
    ],
    "contributes": {
        "keybindings": [
            // working
            {
                "key": "cmd+ctrl+1",
                "command": "workbench.action.terminal.toggleTerminal"
            },
            {
                "key": "cmd+d",
                "command": "editor.action.duplicateSelection"
            },
            {
                "key": "cmd+l",
                "command": "editor.action.deleteLines"
            },
            {
                "key": "cmd+k",
                "command": "workbench.view.scm"
            },
            {
                "key": "cmd+-",
                "command": "workbench.action.navigateBack"
            },
            {
                "key": "cmd+shift+-",
                "command": "workbench.action.navigateForward"
            },
            {
                "key": "f2",
                "command": "renameFile",
                "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
            },
            {
                "key": "cmd+1",
                "command": "workbench.view.explorer",
                "when": "!explorerViewletFocus"
            },
            {
                "key": "cmd+1",
                "command": "workbench.action.toggleSidebarVisibility",
                "when": "explorerViewletFocus"
            },
            {
                "key": "cmd+4",
                "command": "workbench.action.output.toggleOutput"
            },
            {
                "key": "cmd+5",
                "command": "workbench.debug.action.toggleRepl"
            },
            {
                "key": "alt+f7",
                "command": "references-view.find",
                "when": "editorHasReferenceProvider"
            },
            {
                "key": "cmd+n",
                "command": "workbench.action.showAllSymbols"
            },
            {
                "key": "cmd+f4",
                "command": "workbench.action.closeActiveEditor"
            },
            {
                "key": "cmd+b",
                "command": "editor.action.revealDefinition",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
            },
            {
                "key": "enter",
                "command": "filesExplorer.openFilePreserveFocus",
                "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
            },
            {
                "key": "escape",
                "command": "workbench.action.focusLastEditorGroup"
            },
            {
                "key": "cmd+shift+s",
                "command": "workbench.action.files.saveAll"
            },
            {
                "key": "cmd+shift+n",
                "command": "explorer.newFile"
            },
            {
                "key": "shift+cmd+a",
                "command": "workbench.action.showCommands"
            },
            // in progress
            { 
                "key": "alt+enter", 
                "command": "editor.action.quickFix",
                "when": "editorTextFocus" 
            },
            {
                "key": "cmd+alt+b",
                "command": "editor.action.goToImplementation",
                "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
            },
            {
                "key": "cmd+shift+k",
                "command": "git.pushTo"
            },
            {
                "key": "cmd+3",
                "command": "workbench.action.findInFiles"
            },
            {
                "key": "cmd+`",
                "command": "workbench.action.switchWindow"
            },
            {
                "key": "cmd+p",
                "command": "editor.action.triggerParameterHints"
            }
        ]
    }
}